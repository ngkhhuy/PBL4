<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat</title>
    <link rel="icon" href="https://cdn-icons-png.flaticon.com/512/1037/1037316.png" type="image/png">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f0f2f5;
        }

        .chat-container {
            display: flex;
            height: 100vh;
            max-width: 1400px;
            margin: 0 auto;
            background-color: #fff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .conversations-list {
            width: 350px;
            border-right: 1px solid #e0e0e0;
            background-color: #fff;
            overflow-y: auto;
        }

        .conversation-item {
            padding: 15px 20px;
            border-bottom: 1px solid #f0f0f0;
            cursor: pointer;
            transition: background-color 0.2s;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .conversation-item:hover {
            background-color: #f5f6f7;
        }

        .conversation-item.active {
            background-color: #e7f0ff;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: #007bff;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }

        .user-info {
            flex: 1;
        }

        .user-name {
            font-weight: 600;
            color: #050505;
            margin-bottom: 2px;
        }

        .user-email {
            font-size: 0.8em;
            color: #65676b;
        }

        .unread-count {
            background-color: #007bff;
            color: white;
            padding: 2px 8px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: bold;
        }

        .chat-messages {
            flex: 1;
            display: flex;
            flex-direction: column;
            background-color: #fff;
        }

        .chat-header {
            padding: 15px 20px;
            border-bottom: 1px solid #e0e0e0;
            background-color: #fff;
        }

        .messages-container {
            flex: 1;
            overflow-y: auto;
            padding: 20px;
            background-color: #f0f2f5;
        }

        .message {
            margin: 8px 0;
            max-width: 70%;
            padding: 10px 15px;
            border-radius: 18px;
            position: relative;
            word-wrap: break-word;
        }

        .message.sent {
            background-color: #0084ff;
            color: white;
            margin-left: auto;
            border-bottom-right-radius: 4px;
        }

        .message.received {
            background-color: #e4e6eb;
            color: #050505;
            margin-right: auto;
            border-bottom-left-radius: 4px;
        }

        .message-time {
            font-size: 0.7em;
            color: #65676b;
            margin-top: 4px;
            text-align: right;
        }

        .message-input-container {
            padding: 20px;
            background-color: #fff;
            border-top: 1px solid #e0e0e0;
        }

        .message-input-wrapper {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        #messageInput {
            flex: 1;
            padding: 12px 15px;
            border: 1px solid #e0e0e0;
            border-radius: 20px;
            outline: none;
            font-size: 15px;
        }

        #messageInput:focus {
            border-color: #007bff;
        }

        .send-button {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 20px;
            cursor: pointer;
            font-weight: bold;
            transition: background-color 0.2s;
        }

        .send-button:hover {
            background-color: #0056b3;
        }

        /* Scrollbar Styling */
        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #f1f1f1;
        }

        ::-webkit-scrollbar-thumb {
            background: #bbb;
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #888;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .conversations-list {
                width: 100%;
                display: none;
            }

            .conversations-list.active {
                display: block;
            }

            .chat-messages {
                width: 100%;
            }

            .chat-container {
                position: relative;
            }

            .back-button {
                display: block;
            }
        }
    </style>
</head>
<body>
    <div class="chat-container">
        <div class="conversations-list">
            <% conversations.forEach(function(conv) { %>
                <div class="conversation-item" data-user-id="<%= conv.id %>">
                    <div class="user-avatar">
                        <%= conv.username.charAt(0).toUpperCase() %>
                    </div>
                    <div class="user-info">
                        <div class="user-name"><%= conv.username %></div>
                        <div class="user-email"><%= conv.email %></div>
                    </div>
                    <% if (conv.unread_count > 0) { %>
                        <span class="unread-count"><%= conv.unread_count %></span>
                    <% } %>
                </div>
            <% }); %>
        </div>

        <div class="chat-messages">
            <div class="chat-header">
                <h2>Select a conversation</h2>
            </div>
            <div class="messages-container" id="messages"></div>
            <div class="message-input-container">
                <div class="message-input-wrapper">
                    <input type="text" id="messageInput" placeholder="Type a message...">
                    <button class="send-button" onclick="sendMessage()">Send</button>
                </div>
            </div>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        let currentChat = null;
        const userId = Number('<%= userId %>');

        // Debug logs
        console.log('Chat script loaded');

        // Xử lý click vào conversation
        document.querySelectorAll('.conversation-item').forEach(item => {
            item.addEventListener('click', async function() {
                console.log('Conversation clicked');
                const receiverId = this.dataset.userId;
                currentChat = receiverId;

                // Cập nhật UI
                document.querySelectorAll('.conversation-item').forEach(i => i.classList.remove('active'));
                this.classList.add('active');

                const username = this.querySelector('.user-name').textContent;
                document.querySelector('.chat-header h2').textContent = `Chat with ${username}`;

                // Load tin nhắn
                await loadMessages(receiverId);
            });
        });

        async function loadMessages(receiverId) {
            console.log('Loading messages for receiver:', receiverId);
            try {
                const response = await fetch(`/chat/messages/${userId}/${receiverId}`);
                const messages = await response.json();
                
                const messagesContainer = document.getElementById('messages');
                messagesContainer.innerHTML = '';
                
                messages.forEach(msg => {
                    appendMessage(msg.content, msg.sender_id == userId ? 'sent' : 'received', msg.timestamp);
                });
            } catch (error) {
                console.error('Error loading messages:', error);
            }
        }

        function appendMessage(content, type, timestamp) {
            const messagesContainer = document.getElementById('messages');
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${type}`;
            
            const messageContent = document.createElement('div');
            messageContent.textContent = content;
            messageDiv.appendChild(messageContent);
            
            const timeDiv = document.createElement('div');
            timeDiv.className = 'message-time';
            timeDiv.textContent = new Date(timestamp).toLocaleTimeString();
            messageDiv.appendChild(timeDiv);
            
            messagesContainer.appendChild(messageDiv);
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }

        function sendMessage() {
            const input = document.getElementById('messageInput');
            const message = input.value.trim();
            
            if (message && currentChat) {
                console.log('Sending message:', message);
                socket.emit('private_message', {
                    senderId: userId,
                    receiverId: currentChat,
                    message: message
                });
                
                appendMessage(message, 'sent', new Date());
                input.value = '';
            }
        }

        // Lắng nghe tin nhắn mới
        socket.on('new_message', (data) => {
            console.log('New message received:', data);
            if (currentChat == data.senderId) {
                appendMessage(data.message, 'received', data.timestamp);
            }
        });

        // Xử lý Enter để gửi tin nhắn
        document.getElementById('messageInput').addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });

        // Authenticate với WebSocket
        socket.emit('authenticate', userId);
        console.log('Socket authenticated');
    </script>
</body>
</html> 